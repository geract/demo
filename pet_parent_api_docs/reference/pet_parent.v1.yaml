openapi: 3.0.0
info:
  title: pet_parent
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /rescuer/organizations:
    put:
      summary: ''
      operationId: put-rescuer-organizations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                organization:
                  type: object
                  properties:
                    id:
                      type: number
                    name:
                      type: string
                    director:
                      type: string
                    description:
                      type: string
                    facebook:
                      type: string
                    twitter:
                      type: string
                    instagram:
                      type: string
                    5013c:
                      type: string
                    sheltered:
                      type: string
                    foster_based:
                      type: string
                    url:
                      type: string
                    email:
                      type: string
                    phone:
                      type: string
                    legal_address:
                      type: object
                      properties:
                        name:
                          type: string
                        address:
                          type: string
                        city:
                          type: string
                        state:
                          type: string
                        zip_code:
                          type: string
                        main_location:
                          type: string
                    physical_addresses:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          address:
                            type: string
                          city:
                            type: string
                          state:
                            type: string
                          zip_code:
                            type: string
                          main_location:
                            type: string
            examples:
              Success:
                value:
                  organization:
                    id: 1
                    name: Org
                    director: none
                    description: null
                    facebook: null
                    twitter: null
                    instagram: null
                    5013c: null
                    sheltered: true
                    foster_based: null
                    url: null
                    email: gct@pph.com
                    phone: '3333'
                    legal_address:
                      name: test
                      address: unknow
                      city: cali
                      state: cali
                      zip_code: '55555'
                      main_location: null
                    physical_addresses:
                      - name: test
                        address: unknow
                        city: cali
                        state: cali
                        zip_code: '55555'
                        main_location: null
  /adopter/searches:
    patch:
      summary: Updates adopter search
      tags:
        - adopters
        - search
      responses:
        '200':
          description: OK
        '422':
          description: Unprocessable Entity
      operationId: patch-adopters-searches
      parameters:
        - schema:
            type: integer
          in: header
          name: API-VERSION
          description: ''
          required: true
        - schema:
            type: string
          in: header
          name: access-token
          required: true
        - schema:
            type: string
          in: header
          name: uid
          required: true
        - schema:
            type: string
          in: header
          name: client
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                search:
                  type: object
                  properties:
                    sex:
                      type: string
                    age:
                      type: string
                    size:
                      type: string
                    breed:
                      type: string
                    zipcode:
                      type: string
            examples:
              Success:
                value:
                  search:
                    sex: female
                    age: puppy
                    size: large
                    breed: dalmatian
                    zipcode: '90210'
    parameters: []
  '/rescuer/rescuer_statuses/{id}':
    patch:
      summary: Updates current recuer status
      tags:
        - rescuers
        - status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  rescuer:
                    type: object
                    properties:
                      first_name:
                        type: string
                      last_name:
                        type: string
                      status:
                        type: string
                      email:
                        type: string
                      title:
                        type: string
                      phone:
                        type: string
                      photo:
                        type: string
              examples:
                Success:
                  value:
                    rescuer:
                      first_name: John
                      last_name: Snow
                      phone: 1-333-333-3333
                      title: Doctor
                      email: profile@test44.com
                      status: archived
                      photo: ''
        '400':
          description: Bad Request
      operationId: patch-rescuer-rescuer_statuses
      parameters:
        - schema:
            type: number
          in: header
          name: API-VERSION
          required: true
        - schema:
            type: string
          in: header
          name: access-token
          required: true
        - schema:
            type: string
          in: header
          name: uid
          required: true
        - schema:
            type: string
          in: header
          name: client
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rescuer:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - archive
                        - active
            examples:
              Success:
                value:
                  rescuer:
                    status: archive
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Rescuer id
  /rescuer/profile:
    patch:
      summary: Updates current rescuer profile
      tags:
        - rescuers
        - profile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  rescuer:
                    type: object
                    properties:
                      first_name:
                        type: string
                      last_name:
                        type: string
                      title:
                        type: string
                      phone:
                        type: string
                      email:
                        type: string
                      status:
                        type: string
                      photo:
                        type: string
              examples:
                Success:
                  value:
                    rescuer:
                      first_name: Johny
                      last_name: Snowie
                      phone: 1-333-333-3333
                      title: Doctor
                      email: profile@test44.com
                      status: created
                      photo: ''
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
              examples:
                Error:
                  value:
                    errors:
                      - Email is not an email
      operationId: patch-rescuer-profile
      description: Updates current recuer profile
      parameters:
        - schema:
            type: string
          in: header
          name: API-VERSION
          required: true
        - schema:
            type: string
          in: header
          name: access-token
          required: true
        - schema:
            type: string
          in: header
          name: uid
          required: true
        - schema:
            type: string
          in: header
          name: client
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rescuer:
                  type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    phone:
                      type: string
                    email:
                      type: string
                    title:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
                    photo:
                      type: string
            examples:
              Success:
                value:
                  rescuer:
                    first_name: John
                    last_name: Snow
                    phone: 1-333-333-3333
                    title: Doctor
                    email: profile@test.com
  '/rescuer/rescuers/{id}':
    parameters:
      - schema:
          type: number
        name: id
        in: path
        required: true
        description: Rescuer id
    patch:
      summary: Updates recuer
      tags:
        - rescuer_admin
        - rescuers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                Success:
                  value:
                    rescuer:
                      first_name: Jane
                      last_name: Dee
                      phone: '3333333'
                      title: Manager
                      email: test@test2.com
                      status: created
        '400':
          description: Bad Request
      operationId: patch-rescuer-rescuer-id
      parameters:
        - schema:
            type: string
          in: header
          name: API-VERSION
        - schema:
            type: string
          in: header
          name: access-token
        - schema:
            type: string
          in: header
          name: client
        - schema:
            type: string
          in: header
          name: uid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rescuer:
                  type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    title:
                      type: string
                    phone:
                      type: string
                    email:
                      type: string
            examples:
              Sucess:
                value:
                  rescuer:
                    first_name: Jane
                    last_name: Dee
                    phone: '3333333'
                    title: Manager
                    email: test@test2.com
                    status: created
    get:
      summary: Shows rescuer
      tags:
        - rescuer_admin
        - rescuers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  rescuer:
                    type: object
                    properties:
                      first_name:
                        type: string
                      last_name:
                        type: string
                      email:
                        type: string
                      phone:
                        type: string
                      title:
                        type: string
                      status:
                        type: string
              examples:
                Success:
                  value:
                    rescuer:
                      first_name: John
                      last_name: Snow
                      phone: 1-333-333-3333
                      title: Doctor
                      email: profile@test.com
                      status: created
        '404':
          description: Not Found
      operationId: get-rescuer-rescuer-id
      requestBody:
        content:
          application/json:
            schema:
              type: object
            examples:
              example-1: {}
      parameters:
        - schema:
            type: string
          in: header
          name: API-VERSION
          required: true
        - schema:
            type: string
          in: header
          name: access-token
          required: true
        - schema:
            type: string
          in: header
          name: uid
          required: true
        - schema:
            type: string
          in: header
          name: client
          required: true
  /rescuer/rescuers:
    post:
      summary: Rescuer admin creates a rescuer
      tags:
        - profile
        - rescuer_admin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                Success:
                  value:
                    rescuer:
                      first_name: John
                      last_name: Snow
                      phone: 1-333-333-3333
                      title: Doctor
                      email: profile@test.com
                      status: created
                      photo: ''
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                Error:
                  value:
                    errors:
                      - Email has already been taken
      operationId: post-rescuer-profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rescuer:
                  type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    title:
                      type: string
                    phone:
                      type: string
                    email:
                      type: string
            examples:
              Example:
                value:
                  rescuer:
                    email: profile@test.com
                    first_name: John
                    last_name: Snow
                    title: Doctor
                    phone: 1-333-333-3333
      description: Creates a rescuer
      parameters:
        - schema:
            type: string
          in: header
          name: API-VERSION
          required: true
        - schema:
            type: string
          in: header
          name: access-token
          required: true
        - schema:
            type: string
          in: header
          name: uid
          required: true
        - schema:
            type: string
          in: header
          name: client
          required: true
    parameters: []
  /rescuer/pet_bulk:
    patch:
      summary: Pets staus bulk update
      tags:
        - 'pets '
        - status
        - bulk
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                Success:
                  value:
                    pets:
                      - id: 8
                        name: string
                        sex: string
                        breed: string
                        age: string
                        price: '0.0'
                        microchip_provider: string
                        microchip_number: string
                        pet_type: null
                        housed: string
                        second_breed: string
                        description: string
                        medical_history: string
                        foster_family: string
                        public: true
                        mix_breed: true
                        personality:
                          good_with_cats: true
                          good_with_dogs: true
                          good_with_children: true
                        slug: string
                        short_url: null
                        status: published
                        reason_code: pet_adopted
                    errors: []
      operationId: patch-rescuer-pet_bulk
      description: Pet status bulk update
      parameters:
        - schema:
            type: string
          in: header
          name: API-VERSION
        - schema:
            type: string
          in: header
          name: access-token
        - schema:
            type: string
          in: header
          name: client
        - schema:
            type: string
          in: header
          name: uid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pets:
                  type: array
                  items:
                    type: integer
                status:
                  type: string
            examples:
              Example:
                value:
                  pets:
                    - 8
                    - 9
                  status: publish
        description: ''
  '/rescuer/pets_statuses/{id}':
    patch:
      summary: Pets staus update
      tags:
        - 'pets '
        - status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                Example:
                  value:
                    pet:
                      id: 8
                      name: string
                      sex: string
                      breed: string
                      age: string
                      price: '0.0'
                      microchip_provider: string
                      microchip_number: string
                      pet_type: null
                      housed: string
                      second_breed: string
                      description: string
                      medical_history: string
                      foster_family: string
                      public: true
                      mix_breed: true
                      personality:
                        good_with_cats: true
                        good_with_dogs: true
                        good_with_children: true
                      slug: string
                      short_url: null
                      status: archived
                      reason_code: pet_adopted
      operationId: 'patch-rescuer-pets_statuses-:id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pet:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - archive
                        - publish
                    reason_code:
                      type: string
                      enum:
                        - pet_adopted
                        - pet_died
                        - no_longer_available
                  required:
                    - status
                    - reason_code
            examples:
              Example:
                value:
                  pet:
                    status: archive
                    reason_code: pet_adopted
        description: ''
      parameters:
        - schema:
            type: integer
          in: header
          name: API-VERSION
          required: true
        - schema:
            type: string
          in: header
          name: access-token
          required: true
        - schema:
            type: string
          in: header
          name: uid
          required: true
        - schema:
            type: string
          in: header
          name: client
          required: true
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/rescuer/pets/{slug}':
    parameters:
      - schema:
          type: string
        name: slug
        in: path
        required: true
        description: |
          Slug is the name of the pet
    patch:
      summary: ''
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                Success:
                  value:
                    pet:
                      id: 8
                      name: string
                      sex: string
                      breed: string
                      age: string
                      price: '0.0'
                      microchip_provider: string
                      microchip_number: string
                      pet_type: null
                      housed: string
                      second_breed: string
                      description: string
                      medical_history: string
                      foster_family: string
                      public: true
                      mix_breed: true
                      personality:
                        good_with_dogs: true
                        good_with_cats: true
                        good_with_children: true
                      slug: string
                      short_url: null
                      status: created
                      reason_code: null
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                Error:
                  value:
                    pet:
                      id: 8
                      name: ''
                      sex: string
                      breed: string
                      age: string
                      price: '0.0'
                      microchip_provider: string
                      microchip_number: string
                      pet_type: null
                      housed: string
                      second_breed: string
                      description: string
                      medical_history: string
                      foster_family: string
                      public: true
                      mix_breed: true
                      personality:
                        good_with_dogs: true
                        good_with_cats: true
                        good_with_children: true
                      slug: string
                      short_url: null
                      status: created
                      reason_code: null
                    errors:
                      - "Name can't be blank"
      operationId: patch-rescuers-pets-id
      description: Updates a pet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pet:
                  type: object
                  required:
                    - name
                    - sex
                    - breed
                    - price
                    - age
                    - personality
                  properties:
                    name:
                      type: string
                    sex:
                      type: string
                    breed:
                      type: string
                    price:
                      type: number
                    age:
                      type: string
                    microchip_provider:
                      type: string
                    microchip_number:
                      type: string
                    personality:
                      type: object
                      properties:
                        good_with_dogs:
                          type: boolean
                        good_with_cats:
                          type: boolean
                        good_with_children:
                          type: boolean
                    mix_breed:
                      type: boolean
                    public:
                      type: boolean
                    foster_family:
                      type: string
                    medical_history:
                      type: string
                    description:
                      type: string
                    second_breed:
                      type: string
                    housed:
                      type: string
                    pet_type:
                      type: string
              required:
                - pet
            examples:
              example-1: {}
    get:
      summary: Pets show
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    type: object
                    properties:
                      name:
                        type: string
                      sex:
                        type: string
                      breed:
                        type: string
                      price:
                        type: string
                      age:
                        type: string
                      microchip_provider:
                        type: string
                      microchip_number:
                        type: string
                      reason_code:
                        type: string
                      status:
                        type: string
                      short_url:
                        type: string
                      slug:
                        type: string
                      personality:
                        type: object
                        properties:
                          good_with_dogs:
                            type: boolean
                          good_with_children:
                            type: boolean
                          good_with_cats:
                            type: boolean
                      public:
                        type: boolean
                      foster_family:
                        type: string
                      medical_history:
                        type: string
                      description:
                        type: string
                      second_breed:
                        type: string
                      housed:
                        type: string
                      pet_type:
                        type: string
                      id:
                        type: integer
              examples:
                Success:
                  value:
                    pet:
                      id: 8
                      name: string
                      sex: string
                      breed: string
                      age: string
                      price: '0.0'
                      microchip_provider: string
                      microchip_number: string
                      pet_type: null
                      housed: string
                      second_breed: string
                      description: string
                      medical_history: string
                      foster_family: string
                      public: true
                      mix_breed: true
                      personality:
                        good_with_cats: true
                        good_with_dogs: true
                        good_with_children: true
                      slug: string
                      short_url: null
                      status: created
                      reason_code: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                description: |
                  Empty object
      operationId: get-rescuers-pets-id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      parameters:
        - schema:
            type: string
          in: header
          name: API-VERSION
          required: true
        - schema:
            type: string
          in: header
          name: client
          required: true
        - schema:
            type: string
          in: header
          name: Accept
          required: true
        - schema:
            type: string
          in: header
          name: uid
          required: true
        - schema:
            type: string
          in: header
          name: access-token
          required: true
  /rescuer/pets:
    post:
      summary: Pets create
      tags:
        - 'pets '
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      sex:
                        type: string
                      breed:
                        type: string
                      price:
                        type: string
                      age:
                        type: string
                      microchip_provider:
                        type: string
                      microchip_number:
                        type: string
                      reason_code:
                        type: string
                      status:
                        type: string
                      short_url:
                        type: string
                      slug:
                        type: string
                      personality:
                        good_with_dogs:
                          type: boolean
                        good_with_cats:
                          type: boolean
                        good_with_children:
                          type: boolean
                        type: object
                        properties: null
                      mix_breed:
                        type: boolean
                      public:
                        type: boolean
                      foster_family:
                        type: string
                      medical_history:
                        type: string
                      description:
                        type: string
                      second_breed:
                        type: string
                      housed:
                        type: string
                      pet_type:
                        type: string
              examples:
                Success:
                  value:
                    pet:
                      id: 8
                      name: string
                      sex: string
                      breed: string
                      age: string
                      price: '0.0'
                      microchip_provider: string
                      microchip_number: string
                      pet_type: null
                      housed: string
                      second_breed: string
                      description: string
                      medical_history: string
                      foster_family: string
                      public: true
                      mix_breed: true
                      personality:
                        good_with_dogs: true
                        good_with_cats: true
                        good_with_children: true
                      slug: string
                      short_url: null
                      status: created
                      reason_code: null
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    type: object
                  errors:
                    type: array
                    items: {}
              examples:
                Error:
                  value:
                    pet:
                      id: null
                      name: null
                      sex: string
                      breed: string
                      age: string
                      price: '0.0'
                      microchip_provider: string
                      microchip_number: string
                      pet_type: null
                      housed: string
                      second_breed: string
                      description: string
                      medical_history: string
                      foster_family: string
                      public: true
                      mix_breed: true
                      personality:
                        good_with_dogs: true
                        good_with_cats: true
                        good_with_children: true
                      slug: null
                      short_url: null
                      status: created
                      reason_code: null
                    errors:
                      - "Name can't be blank"
      operationId: post-rescuer-pets
      description: Creates a pet
      parameters:
        - schema:
            type: string
          in: header
          name: API-VERSION
          required: true
        - schema:
            type: string
          in: header
          name: Content-Type
          required: true
        - schema:
            type: string
          in: header
          name: uid
          required: true
        - schema:
            type: string
          in: header
          name: access-token
          required: true
        - schema:
            type: string
          in: header
          name: client
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pet:
                  type: object
                  required:
                    - personality
                    - age
                    - sex
                    - breed
                    - price
                    - name
                    - size
                  properties:
                    personality:
                      type: object
                      properties:
                        good_with_dogs:
                          type: boolean
                        good_with_cats:
                          type: boolean
                        good_with_children:
                          type: boolean
                    mix_breed:
                      type: boolean
                    public:
                      type: boolean
                    foster_family:
                      type: string
                    medical_history:
                      type: string
                    description:
                      type: string
                    age:
                      type: string
                    sex:
                      type: string
                    second_breed:
                      type: string
                    breed:
                      type: string
                    housed:
                      type: string
                    microchip_number:
                      type: string
                    microchip_provider:
                      type: string
                    price:
                      type:
                        - number
                    name:
                      type: string
                    size:
                      type: string
              required:
                - pet
            examples:
              Success:
                value:
                  pet:
                    name: Doggo
                    price: 100
                    age: Puppy
                    breed: Shiba Inu
                    description: Happy dog
                    housed: Shelter
                    sex: Male
                    size: Large
                    personality:
                      good_with_children: true
                      good_with_dogs: true
                      good_with_cats: true
    parameters: []
  /characteristics_options:
    get:
      summary: Get catalogs data for pet registration
      tags:
        - catalog
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  sex:
                    type: array
                    items:
                      type: string
                  size:
                    type: array
                    items:
                      type: string
                  age:
                    type: array
                    items:
                      type: string
                  housed:
                    type: array
                    items:
                      type: string
                  breed:
                    type: array
                    items:
                      type: string
              examples:
                Success:
                  value:
                    sex:
                      - Male
                      - Female
                    size:
                      - Extra Small
                      - Small
                      - Large
                      - Extra Large
                    age:
                      - Puppy
                      - Young
                      - Adult
                      - Senior
                    housed:
                      - Shelter
                      - Foster
                    breed:
                      - Affenpinscher
                      - Afghan Hound
                      - Airedale Terrier
                      - Akita
                      - Alaskan Klee Kai
                      - Alaskan Malamute
                      - American Bulldog
                      - American English Coonhound
                      - American Eskimo Dog
                      - American Foxhound
                      - American Pit Bull Terrier
                      - American Staffordshire Terrier
                      - American Water Spaniel
                      - Anatolian Shepherd Dog
                      - Appenzeller Sennenhunde
                      - Australian Cattle Dog
                      - Australian Kelpie
                      - Australian Shepherd
                      - Australian Terrier
                      - Azawakh
                      - Barbet
                      - Basenji
                      - Basset Hound
                      - Beagle
                      - Bearded Collie
                      - Bedlington Terrier
                      - Belgian Malinois
                      - Belgian Sheepdog
                      - Belgian Tervuren
                      - Berger Picard
                      - Bernedoodle
                      - Bernese Mountain Dog
                      - Bichon Frise
                      - Black and Tan Coonhound
                      - Black Mouth Cur
                      - Black Russian Terrier
                      - Bloodhound
                      - Blue Lacy
                      - Bluetick Coonhound
                      - Boerboel
                      - Bolognese
                      - Border Collie
                      - Border Terrier
                      - Borzoi
                      - Boston Terrier
                      - Bouvier des Flandres
                      - Boxer
                      - Boykin Spaniel
                      - Bracco Italiano
                      - Briard
                      - Brittany
                      - Brussels Griffon
                      - Bull Terrier
                      - Bulldog
                      - Bullmastiff
                      - Cairn Terrier
                      - Canaan Dog
                      - Cane Corso
                      - Cardigan Welsh Corgi
                      - Catahoula Leopard Dog
                      - Caucasian Shepherd Dog
                      - Cavalier King Charles Spaniel
                      - Cesky Terrier
                      - Chesapeake Bay Retriever
                      - Chihuahua
                      - Chinese Crested
                      - Chinese Shar-Pei
                      - Chinook
                      - Chow Chow
                      - Clumber Spaniel
                      - Cockapoo
                      - Cocker Spaniel
                      - Collie
                      - Coton de Tulear
                      - Curly-Coated Retriever
                      - Dachshund
                      - Dalmatian
                      - Dandie Dinmont Terrier
                      - Doberman Pinscher
                      - Dogo Argentino
                      - Dogue de Bordeaux
                      - Dutch Shepherd
                      - English Cocker Spaniel
                      - English Foxhound
                      - English Setter
                      - English Springer Spaniel
                      - English Toy Spaniel
                      - Entlebucher Mountain Dog
                      - Field Spaniel
                      - Finnish Lapphund
                      - Finnish Spitz
                      - Flat-Coated Retriever
                      - Fox Terrier
                      - French Bulldog
                      - German Pinscher
                      - German Shepherd Dog
                      - German Shorthaired Pointer
                      - German Wirehaired Pointer
                      - Giant Schnauzer
                      - Glen of Imaal Terrier
                      - Goldador
                      - Golden Retriever
                      - Goldendoodle
                      - Gordon Setter
                      - Great Dane
                      - Great Pyrenees
                      - Greater Swiss Mountain Dog
                      - Greyhound
                      - Harrier
                      - Havanese
                      - Ibizan Hound
                      - Icelandic Sheepdog
                      - Irish Red and White Setter
                      - Irish Setter
                      - Irish Terrier
                      - Irish Water Spaniel
                      - Irish Wolfhound
                      - Italian Greyhound
                      - Jack Russell Terrier
                      - Japanese Chin
                      - Japanese Spitz
                      - Karelian Bear Dog
                      - Keeshond
                      - Kerry Blue Terrier
                      - Komondor
                      - Kooikerhondje
                      - Korean Jindo Dog
                      - Kuvasz
                      - Labradoodle
                      - Labrador Retriever
                      - Lagotto Romagnolo
                      - Lakeland Terrier
                      - Lancashire Heeler
                      - Leonberger
                      - Lhasa Apso
                      - Lowchen
                      - Maltese
                      - Maltese Shih Tzu
                      - Maltipoo
                      - Manchester Terrier
                      - Mastiff
                      - Miniature Pinscher
                      - Miniature Schnauzer
                      - Mudi
                      - Mutt
                      - Neapolitan Mastiff
                      - Newfoundland
                      - Norfolk Terrier
                      - Norwegian Buhund
                      - Norwegian Elkhound
                      - Norwegian Lundehund
                      - Norwich Terrier
                      - Nova Scotia Duck Tolling Retriever
                      - Old English Sheepdog
                      - Otterhound
                      - Papillon
                      - Peekapoo
                      - Pekingese
                      - Pembroke Welsh Corgi
                      - Petit Basset Griffon Vendeen
                      - Pharaoh Hound
                      - Plott
                      - Pocket Beagle
                      - Pointer
                      - Polish Lowland Sheepdog
                      - Pomeranian
                      - Pomsky
                      - Poodle
                      - Portuguese Water Dog
                      - Pug
                      - Puggle
                      - Puli
                      - Pyrenean Shepherd
                      - Rat Terrier
                      - Redbone Coonhound
                      - Rhodesian Ridgeback
                      - Rottweiler
                      - Saint Bernard
                      - Saluki
                      - Samoyed
                      - Schipperke
                      - Schnoodle
                      - Scottish Deerhound
                      - Scottish Terrier
                      - Sealyham Terrier
                      - Shetland Sheepdog
                      - Shiba Inu
                      - Shih Tzu
                      - Siberian Husky
                      - Silken Windhound
                      - Silky Terrier
                      - Skye Terrier
                      - Sloughi
                      - Small Munsterlander Pointer
                      - Soft Coated Wheaten Terrier
                      - Stabyhoun
                      - Staffordshire Bull Terrier
                      - Standard Schnauzer
                      - Sussex Spaniel
                      - Swedish Vallhund
                      - Tibetan Mastiff
                      - Tibetan Spaniel
                      - Tibetan Terrier
                      - Toy Fox Terrier
                      - Treeing Tennessee Brindle
                      - Treeing Walker Coonhound
                      - Vizsla
                      - Weimaraner
                      - Welsh Springer Spaniel
                      - Welsh Terrier
                      - West Highland White Terrier
                      - Whippet
                      - Wirehaired Pointing Griffon
                      - Xoloitzcuintli
                      - Yorkipoo
                      - Yorkshire Terrier
      operationId: get-characteristics_options
      description: 'Returns catalogs data for pet registration such as breed, sex, age, housed'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      parameters:
        - schema:
            type: string
          in: header
          name: ' API-VERSION: 1'
          required: true
        - schema:
            type: string
          in: header
          name: 'Accept: application/json'
          required: true
        - schema:
            type: string
          in: header
          name: 'uid: test1@test.com'
          required: true
        - schema:
            type: string
          in: header
          name: 'access-token: Rw6XFMRR2bBWMGk0ECh-kw'
          required: true
        - schema:
            type: string
          in: header
          name: 'client: LtAygNQ6gRBU81jkq7FEsQ'
          required: true
        - schema:
            type: string
          in: header
  /auth/sign_in:
    post:
      summary: Sign in a rescuer
      tags:
        - users
        - auth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                      email:
                        type: string
                      provider:
                        type: string
                      uid:
                        type: string
                      allow_password_change:
                        type: boolean
                      image:
                        type: 'null'
                      status:
                        type: 'null'
                      settings:
                        type: 'null'
              examples:
                Response success:
                  value:
                    data:
                      id: 5
                      email: test1@test.com
                      provider: email
                      uid: test1@test.com
                      allow_password_change: false
                      image: null
                      status: null
                      settings: null
          headers:
            access-token:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items: {}
              examples:
                Error:
                  value:
                    success: false
                    errors:
                      - Invalid login credentials. Please try again.
      operationId: post-auth-sign_in
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
            examples:
              example-1:
                value:
                  email: test1@test.com
                  password: TopS3cr3t
      description: Allows a rescuer to sign in
  /newsletter:
    post:
      summary: Your POST endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  inquery:
                    type: object
                    properties:
                      email:
                        type: string
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties:
                  newsletter:
                    type: object
                    properties:
                      email:
                        type: string
                  errors:
                    type: object
                    properties:
                      '[attribute]':
                        type: array
                        example: "password: ['is required', 'cant be blank']"
                        items:
                          type: string
      operationId: create-newsletter
      description: Register a new user (by email) to the Newsletter
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                newsletter:
                  type: object
                  required:
                    - email
                  properties:
                    email:
                      type: string
                      format: email
              required:
                - newsletter
            examples:
              example-1: {}
        description: ''
  /inqueries:
    post:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  inquery:
                    type: object
                    properties:
                      first_name:
                        type: string
                      last_name:
                        type: string
                      phone_number:
                        type: string
                      email:
                        type: string
                        format: email
                      city:
                        type: string
                      state:
                        type: string
                      reasons:
                        type: string
                      pet_id:
                        type: integer
                      id:
                        type: integer
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties:
                  inquery:
                    type: object
                    properties:
                      first_name:
                        type: string
                      last_name:
                        type: string
                      phone_number:
                        type: string
                      email:
                        type: string
                        format: email
                      city:
                        type: string
                      state:
                        type: string
                      reasons:
                        type: string
                      pet_id:
                        type: integer
                  errors:
                    type: object
                    properties:
                      '[attribute]':
                        type: array
                        example: "password: ['invalid', 'cant be blank']"
                        items:
                          type: string
      operationId: post-inqueries
      description: Create an inquery for a pet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                inquery:
                  type: object
                  required:
                    - first_name
                    - last_name
                    - phone_number
                    - email
                    - city
                    - state
                    - reasons
                    - pet_id
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    phone_number:
                      type: string
                    email:
                      type: string
                      format: email
                    city:
                      type: string
                    state:
                      type: string
                    reasons:
                      type: string
                    pet_id:
                      type:
                        - string
                        - integer
              required:
                - inquery
  '/organizations/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  web_url:
                    type: string
                  email:
                    type: string
                  code:
                    type: string
                  address:
                    type: string
      operationId: get-organizations-id
  /pets:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-pets
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  sex:
                    type: string
                  breed:
                    type: string
                  age:
                    type: string
                  location:
                    type: string
                  size:
                    type: string
                  images:
                    type:
                      - string
                      - array
                    items:
                      type: object
                      properties:
                        original:
                          type: string
                        thumbnail:
                          type: string
            examples: {}
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties:
                filters:
                  type: object
                  properties:
                    sex:
                      type: string
                    age:
                      type: string
                    size:
                      type: string
                    zipCpde:
                      type: string
                    radius:
                      type: number
                    organization_id:
                      type: number
                    page:
                      type: number
                    limit:
                      type: number
  /adopter/personal_info:
    parameters: []
    get:
      tags:
        - PetApplication
      responses:
        '200':
          description: |-
            OK
            Always returns ids
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      has_co_adopter:
                        type: boolean
                        description: 'If this is false, user should not fill `co_adopter` form'
                      employment_attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            enum:
                              - Self-Employed
                              - Employed
                              - Unemployed
                              - Retired
                          years:
                            type: string
                            enum:
                              - <1 year
                              - 1-2 years
                              - 3+ years
                          company:
                            type: string
                          address_attributes:
                            type:
                              - object
                            id:
                              type: string
                            required:
                              - street_line_1
                              - street_line_2
                              - city
                              - state
                              - zip_code
                              - country
                            description: |-
                              In the backend this field is not required if `status` equals to `Retired` or `Unemployed
                              `
                            properties:
                              street_line_1:
                                type: string
                              street_line_2:
                                type: string
                              city:
                                type: string
                              state:
                                type: string
                              zip_code:
                                type: string
                              country:
                                type: string
                                enum:
                                  - United States
                          id:
                            type: string
                        required:
                          - address_attributes
                      address_attributes:
                        type: object
                        properties:
                          street_line_1:
                            type: string
                          street_line_2:
                            type: string
                          city:
                            type: string
                          state:
                            type: string
                          zip_code:
                            type: string
                          country:
                            type: string
                            enum:
                              - United States
                          id:
                            type: string
                        required:
                          - street_line_1
                          - street_line_2
                          - city
                          - state
                          - zip_code
                          - country
                      birthday:
                        type: string
                        default: '2000-00-00'
                        format: date
                        example: '1968-10-03'
                      phone_number:
                        type: string
                        example: '1234567890'
                        minLength: 10
                        maxLength: 10
                      family_status:
                        type: string
                        enum:
                          - He
                          - She
                          - They
                          - Prefer not to say
                      pronoun:
                        type: string
                        enum:
                          - He
                          - She
                          - They
                          - Prefer not to say
                      pet_info_attributtes:
                        type: object
                        properties:
                          personal:
                            type: object
                            properties:
                              about_you:
                                type: string
                              ideal_pet:
                                type: string
                              adopt_reason:
                                type: string
                              is_military:
                                type: boolean
                                default: false
                              military_pet_plan:
                                type: string
                                description: 'If `is_military` is true, this field is required'
                              pet_costs:
                                type: string
                              receive_updates:
                                type: string
                              id:
                                type: string
                      id:
                        type: string
        '409':
          description: Conflict
      operationId: get-adopter-personal-info
      description: |-
        Get all the `AdopterProfile` Personal info for current user
        If no Personal info is found, this will return a 409 :conflict
    patch:
      summary: ''
      operationId: patch-adopter-personal-info
      responses:
        '200':
          description: OK
          parameters:
            - schema: null
              type: string
              in: header
              name: ' API-VERSION: 1'
              required: true
            - schema: null
              type: boolean
              in: header
              name: 'Accept: application/json'
              required: true
            - schema: null
              type: string
              in: header
              name: uid
              required: true
            - schema: null
              type: string
              in: header
              name: access-token
              required: true
            - schema: null
              type: string
              in: header
              name: client
              required: true
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                example: "[\"Pronoun can't be blank\", \"Family status can't be blank\"]"
                items:
                  type: string
      description: Patch the `AdopterProfile` personal info
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                profile:
                  type: object
                  properties:
                    has_co_adopter:
                      type: boolean
                      description: 'If this is false, user should not fill `co_adopter` form'
                    employment_attributes:
                      type: object
                      required:
                        - address_attributes
                      properties:
                        status:
                          type: string
                          enum:
                            - Self-Employed
                            - Employed
                            - Unemployed
                            - Retired
                        years:
                          type: string
                          enum:
                            - <1 year
                            - 1-2 years
                            - 3+ years
                        company:
                          type: string
                        address_attributes:
                          type: object
                          required:
                            - country
                            - zip_code
                            - state
                            - city
                            - street_line_2
                            - street_line_1
                          properties:
                            id:
                              type: string
                            country:
                              type: string
                              enum:
                                - United States
                            zip_code:
                              type: string
                            state:
                              type: string
                            city:
                              type: string
                            street_line_2:
                              type: string
                            street_line_1:
                              type: string
                        id:
                          type: string
                    address_attributes:
                      type: object
                      required:
                        - street_line_1
                        - street_line_2
                        - city
                        - state
                        - zip_code
                        - country
                      properties:
                        street_line_1:
                          type: string
                        street_line_2:
                          type: string
                        city:
                          type: string
                        state:
                          type: string
                        zip_code:
                          type: string
                        country:
                          type: string
                          enum:
                            - United States
                        id:
                          type: string
                    birthday:
                      type: string
                      default: '2000-00-00'
                      format: date
                      example: '1968-10-03'
                    phone_number:
                      type: string
                      example: '1234567890'
                      minLength: 10
                      maxLength: 10
                    family_status:
                      type: string
                      enum:
                        - He
                        - She
                        - They
                        - Prefer not to say
                    pronoun:
                      type: string
                      enum:
                        - He
                        - She
                        - They
                        - Prefer not to say
                    pet_info_attributtes:
                      type: object
                      required:
                        - about_you
                        - ideal_pet
                        - adopt_reason
                        - is_military
                      properties:
                        about_you:
                          type: string
                        ideal_pet:
                          type: string
                        adopt_reason:
                          type: string
                        is_military:
                          type: boolean
                          default: false
                        military_pet_plan:
                          type: string
                          description: 'If `is_military` is true, this field is required'
                        pet_costs:
                          type: string
                        receive_updates:
                          type: boolean
                        id:
                          type: string
                    id:
                      type: string
                  required:
                    - employment_attributes
                    - address_attributes
                    - birthday
                    - phone_number
                    - family_status
                    - pronoun
                    - pet_info_attributtes
        description: 'Patch the `PetApplication::PersonalInfo` for current user'
  /adopter/personal_co_adopter:
    patch:
      summary: ''
      operationId: patch-adopter-personal-co-adopter
      responses:
        '200':
          description: OK
          parameters:
            - schema: null
              type: string
              in: header
              name: ' API-VERSION: 1'
              required: true
            - schema: null
              type: boolean
              in: header
              name: 'Accept: application/json'
              required: true
            - schema: null
              type: string
              in: header
              name: uid
              required: true
            - schema: null
              type: string
              in: header
              name: access-token
              required: true
            - schema: null
              type: string
              in: header
              name: client
              required: true
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Unavailable action, user is in #{current_user.profile.status} status'
                  status:
                    type: string
                    enum:
                      - personal_co_adopter
                      - personal_final
                      - home
                      - lifestyle
                      - add_references
                      - agreements
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                profile:
                  type: object
                  properties:
                    pet_info_attributes:
                      type: object
                      properties:
                        id:
                          type: string
                        personal:
                          type: object
                          required:
                            - pet_relation_change_owner
                          properties:
                            co_adopter_relation:
                              type: string
                              enum:
                                - Spouse/Partner
                                - Parent
                                - Sibling
                                - Friend
                                - Roomate
                            pet_relation_change_owner:
                              type: string
                    is_address_same_as_adopter:
                      type: boolean
                    co_adopter_attributes:
                      type: object
                      properties:
                        email:
                          type: string
                          format: email
                        first_name:
                          type: string
                        last_name:
                          type: string
                        phone_number:
                          type: string
                          example: '1234567890'
                          minLength: 10
                          maxLength: 10
                        birthday:
                          type: string
                          default: '2000-00-00'
                          format: date
                          example: '1968-10-03'
                        address_attributes:
                          type: object
                          required:
                            - street_line_1
                            - street_line_2
                            - city
                            - state
                            - zip_code
                            - country
                          properties:
                            street_line_1:
                              type: string
                            street_line_2:
                              type: string
                            city:
                              type: string
                            state:
                              type: string
                            zip_code:
                              type: string
                            country:
                              type: string
                              enum:
                                - United States
                            id:
                              type: string
                        employment_attributes:
                          type: object
                          properties:
                            status:
                              type: string
                              enum:
                                - Self-Employed
                                - Employed
                                - Unemployed
                                - Retired
                            years:
                              type: string
                              enum:
                                - <1 year
                                - 1-2 years
                                - 3+ years
                            company:
                              type: string
                            address_attributes:
                              type:
                                - object
                              required:
                                - street_line_1
                                - street_line_2
                                - city
                                - state
                                - zip_code
                                - country
                              properties:
                                street_line_1:
                                  type: string
                                street_line_2:
                                  type: string
                                city:
                                  type: string
                                state:
                                  type: string
                                zip_code:
                                  type: string
                                country:
                                  type: string
                                  enum:
                                    - United States
                                id:
                                  type: string
                            id:
                              type: string
                          required:
                            - address_attributes
                        id:
                          type: string
                      required:
                        - phone_number
                        - address_attributes
                    id:
                      type: string
                  required:
                    - is_address_same_as_adopter
        description: ''
      description: |-
        Patch the `AdopterProfile` co-adopter

        Adopter must have completed `personal_info` (without skipping co-adopter) to perform the request, otherwise a 409 :conflict will be returned
    get:
      summary: ''
      operationId: get-adopter-personal-co-adopter
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      pet_info_attributes:
                        type:
                          - object
                        properties:
                          id:
                            type: string
                          personal:
                            type: object
                            properties:
                              co_adopter_relation:
                                type: string
                                enum:
                                  - Spouse/Partner
                                  - Parent
                                  - Sibling
                                  - Friend
                                  - Roomate
                              pet_relation_change_owner:
                                type: string
                      is_address_same_as_adopter:
                        type: boolean
                      co_adopter_attributes:
                        type: object
                        properties:
                          id:
                            type: string
                          email:
                            type: string
                            format: email
                          first_name:
                            type: string
                          last_name:
                            type: string
                          phone_number:
                            type: string
                            example: '1234567890'
                            minLength: 10
                            maxLength: 10
                          birthday:
                            type: string
                            default: '2000-00-00'
                            format: date
                            example: '1968-10-03'
                          address_attributes:
                            type: object
                            properties:
                              id:
                                type: string
                              street_line_1:
                                type: string
                              street_line_2:
                                type: string
                              city:
                                type: string
                              state:
                                type: string
                              zip_code:
                                type: string
                              country:
                                type: string
                                enum:
                                  - United States
                          employment_attributes:
                            type: object
                            properties:
                              id:
                                type: string
                              status:
                                type: string
                                enum:
                                  - Self-Employed
                                  - Employed
                                  - Unemployed
                                  - Retired
                              years:
                                type: string
                                enum:
                                  - <1 year
                                  - 1-2 years
                                  - 3+ years
                              company:
                                type: string
                              address_attributes:
                                type:
                                  - object
                                required:
                                  - country
                                properties:
                                  id:
                                    type: string
                                  street_line_1:
                                    type: string
                                  street_line_2:
                                    type: string
                                  city:
                                    type: string
                                  state:
                                    type: string
                                  zip_code:
                                    type: string
                                  country:
                                    type: string
                                    enum:
                                      - United States
                      id:
                        type: string
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Unavailable action, user is in #{current_user.profile.status} status'
                  status:
                    type: string
                    enum:
                      - personal_co_adopter
                      - personal_final
                      - home
                      - lifestyle
                      - add_references
                      - agreements
                      - personal_info
      description: |-
        Get the `AdopterProfile` co-adopter info

        Adoper must have completed `personal_co_adopter` to receive a 200, otherwise he will receive a 409
    parameters: []
  /adopter/personal_final:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      id:
                        type: string
                      pet_info_attributes:
                        type: object
                        required:
                          - personal
                          - animal_history
                        properties:
                          id:
                            type: string
                          personal:
                            type: object
                            properties:
                              has_children:
                                type: boolean
                              children_ages:
                                type: string
                              is_pet_allergic:
                                type: boolean
                              pet_allergic_plan:
                                type: string
                          animal_history:
                            type: object
                            properties:
                              has_pets:
                                type: string
                              pet_name:
                                type: string
                              pet_species:
                                type: string
                              pet_breed:
                                type: string
                              pet_sex:
                                type: string
                              pet_age:
                                type: string
                              has_owned_pets:
                                type: boolean
                              owned_pet_name:
                                type: string
                              owned_pet_species:
                                type: string
                              owned_pet_breed:
                                type: string
                              owned_pet_sex:
                                type: string
                              owned_pet_age:
                                type: string
                              owned_pet_where:
                                type: string
                      veterinarian_attributes:
                        type: object
                        required:
                          - first_name
                          - last_name
                          - email
                          - phone_number
                          - address_attributes
                        properties:
                          id:
                            type: string
                          first_name:
                            type: string
                          last_name:
                            type: string
                          email:
                            type: string
                          phone_number:
                            type: string
                          address_attributes:
                            type: object
                            required:
                              - id
                              - street_line_1
                              - city
                              - state
                              - country
                              - zip_code
                            properties:
                              id:
                                type: string
                              street_line_1:
                                type: string
                              street_line_2:
                                type: string
                              city:
                                type: string
                              state:
                                type: string
                              country:
                                type: string
                              zip_code:
                                type: string
                    required:
                      - pet_info_attributes
                      - veterinarian_attributes
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Unavailable action, user is in #{current_user.profile.status} status'
                  status:
                    type: string
                    enum:
                      - personal_info
                      - personal_co_adopter
                      - personal_final
                      - home
                      - lifestyle
                      - agreements
                      - add_references
      operationId: get-adopter-profile-personal-final
      description: |-
        Get the `AdopterProfile` personal final info

        Adoper must have completed `personal_final` to receive a 200, otherwise he will receive a 409
      parameters: []
    patch:
      summary: ''
      operationId: patch-adopter-profile-personal-final
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      id:
                        type: string
                      pet_info_attributes:
                        type: object
                        required:
                          - personal
                          - animal_history
                        properties:
                          id:
                            type: string
                          personal:
                            type: object
                            properties:
                              has_children:
                                type: boolean
                              children_ages:
                                type: string
                              is_pet_allergic:
                                type: boolean
                              pet_allergic_plan:
                                type: string
                          animal_history:
                            type: object
                            properties:
                              has_pets:
                                type: string
                              pet_name:
                                type: string
                              pet_species:
                                type: string
                              pet_breed:
                                type: string
                              pet_sex:
                                type: string
                              pet_age:
                                type: string
                              has_owned_pets:
                                type: boolean
                              owned_pet_name:
                                type: string
                              owned_pet_species:
                                type: string
                              owned_pet_breed:
                                type: string
                              owned_pet_sex:
                                type: string
                              owned_pet_age:
                                type: string
                              owned_pet_where:
                                type: string
                      veterinarian_attributes:
                        type: object
                        required:
                          - first_name
                          - last_name
                          - email
                          - phone_number
                          - address_attributes
                        properties:
                          id:
                            type: string
                          first_name:
                            type: string
                          last_name:
                            type: string
                          email:
                            type: string
                          phone_number:
                            type: string
                          address_attributes:
                            type: object
                            required:
                              - id
                              - street_line_1
                              - city
                              - state
                              - country
                              - zip_code
                            properties:
                              id:
                                type: string
                              street_line_1:
                                type: string
                              street_line_2:
                                type: string
                              city:
                                type: string
                              state:
                                type: string
                              country:
                                type: string
                              zip_code:
                                type: string
                    required:
                      - pet_info_attributes
                      - veterinarian_attributes
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  status:
                    type: string
                    enum:
                      - personal_info
                      - personal_co_adopter
                      - personal_final
                      - home
                      - lifestyle
                      - agreements
                      - add_references
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      description: |-
        Patch `AdopterProfile` personal final info

        Adopter must have completed `personal_info` (with skipped co-adopter) or `personal_co_adopter` to perform the request, otherwise a 409 :conflict will be returned
  /adopter/home:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      id:
                        type: string
                      home:
                        type: object
                        properties:
                          kind:
                            type: string
                          has_pool:
                            type: boolean
                          is_pool:
                            type: boolean
                          fenced:
                            type: string
                          has_yard:
                            type: boolean
                          yard:
                            type: string
                          is_rent:
                            type: boolean
                          is_landlord_allow_pets:
                            type: boolean
                          landlord_first_name:
                            type: string
                          landlord_last_name:
                            type: string
                          landlord_phone_number:
                            type: string
                          landlord_contactable:
                            type: string
                          landlord_email:
                            type: string
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  status:
                    type: string
      operationId: get-adopter-profile-home
      description: |-
        Get the `AdopterProfile` home info

        Adoper must have completed `home` to receive a 200, otherwise he will receive a 409
      requestBody: {}
    patch:
      summary: ''
      operationId: patch-adopter-home
      responses:
        '200':
          description: OK
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  status:
                    type: string
                    enum:
                      - personal_info
                      - personal_co_adopter
                      - personal_final
                      - home
                      - lifestyle
                      - agreements
                      - add_references
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
      description: |-
        Patch `AdopterProfile` personal home info

        Adopter must have completed `personal_final` to perform the request, otherwise a 409 :conflict will be returned
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                profile:
                  type: object
                  required:
                    - pet_info_attributes
                  properties:
                    id:
                      type: string
                    pet_info_attributes:
                      type: object
                      required:
                        - home
                      properties:
                        id:
                          type: string
                        home:
                          type: object
                          properties:
                            kind:
                              type: string
                            has_pool:
                              type: boolean
                            is_pool_fenced:
                              type: boolean
                            has_yard:
                              type: boolean
                            yard:
                              type: string
                            is_rent:
                              type: boolean
                            is_landlord_allow_pets:
                              type: boolean
                            landlord_first_name:
                              type: string
                            landlord_last_name:
                              type: string
                            landlord_phone_number:
                              type: string
                            landlord_email:
                              type: string
                            is_landlord_contactable:
                              type: string
              required:
                - profile
  /adopter/lifestyle:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      pet_info_attributes:
                        type: object
                        properties:
                          living_place:
                            type: string
                          bad_weather_plan:
                            type: string
                          hours_left:
                            type: string
                          alone_place:
                            type: string
                          walk_explanation:
                            type: string
                          trainer:
                            type: string
                          energy:
                            type: string
                          train_plan_experiences:
                            type: string
                      id:
                        type: string
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  status:
                    type: string
                    enum:
                      - personal_info
                      - personal_co_adopter
                      - personal_final
                      - home
                      - lifestyle
                      - agreements
                      - add_references
      operationId: get-adopter-lifestyle
      description: |-
        Get the `AdopterProfile` lifestyle info

        Adoper must have completed `lifestyle` to receive a 200, otherwise he will receive a 409
      requestBody: {}
    patch:
      summary: ''
      operationId: patch-adopter-lifestyle
      responses:
        '200':
          description: OK
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  status:
                    type: string
                    enum:
                      - personal_info
                      - personal_co_adopter
                      - personal_final
                      - home
                      - lifestyle
                      - agreements
                      - add_references
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
      description: |-
        Patch `AdopterProfile` personal lifestyle info

        Adopter must have completed `home` to perform the request, otherwise a 409 :conflict will be returned
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                profile:
                  type: object
                  required:
                    - pet_info_attributes
                  properties:
                    id:
                      type: string
                    pet_info_attributes:
                      type: object
                      properties:
                        living_place:
                          type: string
                        bad_weather_plan:
                          type: string
                        hours_left:
                          type: string
                        alone_place:
                          type: string
                        walk_explanation:
                          type: string
                        trainer:
                          type: string
                        energy:
                          type: string
                        train_plan:
                          type: string
                        experiences:
                          type: string
              required:
                - profile
  /adopter/agreements:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      home_visit_agreement:
                        type: boolean
                      adoption_fee_agreement:
                        type: boolean
                      id:
                        type: string
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  status:
                    type: string
                    enum:
                      - personal_info
                      - personal_co_adopter
                      - personal_final
                      - home
                      - lifestyle
                      - agreements
                      - add_references
      operationId: get-adopter-agreements
      description: |-
        Get the `AdopterProfile` agreements info

        Adoper must have completed `agreements` to receive a 200, otherwise he will receive a 409
    patch:
      summary: ''
      operationId: patch-adopter-agreements
      responses:
        '200':
          description: OK
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  status:
                    type: string
                    enum:
                      - personal_info
                      - personal_co_adopter
                      - personal_final
                      - home
                      - lifestyle
                      - agreements
                      - add_references
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
      description: |-
        Patch `AdopterProfile` agreements info

        Adopter must have completed `lifestyle` to perform the request, otherwise a 409 :conflict will be returned
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                profile:
                  type: object
                  required:
                    - home_visit_agreement
                    - adoption_fee_agreement
                  properties:
                    id:
                      type: string
                    home_visit_agreement:
                      type: boolean
                    adoption_fee_agreement:
                      type: boolean
              required:
                - profile
  /adopter/add_references:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      id:
                        type: string
                      references_attributes:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            first_name:
                              type: string
                            last_name:
                              type: string
                            email:
                              type: string
                            phone_number:
                              type: string
                            relationship:
                              type: string
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  status:
                    type: string
                    enum:
                      - personal_info
                      - personal_co_adopter
                      - personal_final
                      - home
                      - lifestyle
                      - agreements
                      - add_references
      operationId: get-adopter-profile-add-references
      description: |-
        Get the `AdopterProfile` references info

        Adoper must have completed `add_references` to receive a 200, otherwise he will receive a 409
    patch:
      summary: ''
      operationId: patch-adopter-profile-add-references
      responses:
        '200':
          description: OK
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  status:
                    type: string
                    enum:
                      - personal_info
                      - personal_co_adopter
                      - personal_final
                      - home
                      - lifestyle
                      - agreements
                      - add_references
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
      description: |-
        Patch `AdopterProfile` references info

        Adopter must have completed `agreements` to perform the request, otherwise a 409 :conflict will be returned
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                profile:
                  type: object
                  properties:
                    id:
                      type: string
                    first_name:
                      type: string
                    last_name:
                      type: string
                    email:
                      type: string
                      format: email
                      pattern: "/\\A[^@\\s]+@[^@\\s]+\\z/"
                    phone_number:
                      type: string
                    relationship:
                      type: string
                      enum:
                        - Parent
                        - Sibling
                        - Family
                        - Friend
                        - Neighbor
                        - Coworker
components:
  schemas: {}
